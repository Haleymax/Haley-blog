"use strict";(self.webpackChunkvuepress_theme_hope_template=self.webpackChunkvuepress_theme_hope_template||[]).push([[8584],{6262:(i,s)=>{s.A=(i,s)=>{const l=i.__vccOpts||i;for(const[i,n]of s)l[i]=n;return l}},7291:(i,s,l)=>{l.r(s),l.d(s,{comp:()=>h,data:()=>e});var n=l(641);const a=[(0,n.Fv)('<h1 id="c-c-使用-mysql-api-操作-数据库" tabindex="-1"><a class="header-anchor" href="#c-c-使用-mysql-api-操作-数据库"><span>C/C++ 使用 MySQL API 操作 数据库</span></a></h1><h2 id="_1、连接数据库操作的步骤实现" tabindex="-1"><a class="header-anchor" href="#_1、连接数据库操作的步骤实现"><span>1、连接数据库操作的步骤实现</span></a></h2><ol><li><p>初始化链接</p></li><li><p>连接mysql服务器，参数如下：</p></li></ol><ul><li><p>服务器的IP</p></li><li><p>端口</p></li><li><p>用户名</p></li><li><p>密码</p></li><li><p>数据库名</p></li></ul><ol start="3"><li><p>对数据进行增删查改</p></li><li><p>事务处理</p></li><li><p>数据库的读数据 操作-&gt; 查询 -&gt; 得到结果集</p></li><li><p>遍历结果集 -&gt; 获得自己需要的数据</p></li><li><p>释放资源</p></li></ol><h2 id="_2、api详解" tabindex="-1"><a class="header-anchor" href="#_2、api详解"><span>2、API详解</span></a></h2><h3 id="_2-1、初始化连接" tabindex="-1"><a class="header-anchor" href="#_2-1、初始化连接"><span>2.1、初始化连接</span></a></h3><p><strong>函数:</strong><code>MYSQL *mysql_init(MYSQL *mysql);</code></p><p><strong>返回值:</strong> 该函数将分配、初始化、并返回新对象 通过返回的这个对象去连接MySQL的服务器</p><h3 id="_2-2、连接mysql服务器" tabindex="-1"><a class="header-anchor" href="#_2-2、连接mysql服务器"><span>2.2、连接mysql服务器</span></a></h3><p><strong>函数及参数：</strong></p><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" data-title="cpp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">MYSQL</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">mysql_real_connect</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">        MYSQL</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">mysql</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">               //mysql_init() 函数的返回地址</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        const</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> char</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">host</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">           //主机地址</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        const</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> char</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">user</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">           //mysql服务器的用户名</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        const</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> char</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">passwd</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">         //连接mysql服务器的密码</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        const</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> char</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">db</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">             //需要连接的数据库名字</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        unsigned</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> port</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">          //连接的端口，mysql服务器默认为3306</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        const</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> char</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">unix_socket</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">    //本地套接字,如果没有指定就是NULL</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        unsigned</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> long</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> client_flag</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">   //通常指定为0</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    )</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>返回值：</strong> 成功: 返回MYSQL*连接句柄（所谓的句柄就是一个连接的对象）, 对于成功的连接，返回值与第1个参数的值相同。返回值指向的 内存和第一个参数指针指向的内存一样 失败，返回NULL。</p><p><strong>句柄:</strong> 是windows中的一个概念, 句柄可以理解为一个实例(或者对象)</p><h3 id="_2-3、执行sql语句" tabindex="-1"><a class="header-anchor" href="#_2-3、执行sql语句"><span>2.3、执行sql语句</span></a></h3><p><strong>函数：</strong> <code>int mysql_query(MYSQL *mysql , const char *query);</code></p><p><strong>参数：</strong></p><ul><li><p>mysql ： mysql_real_connect()的返回值</p></li><li><p>query ：一个可以执行的sql语句，结尾的位置不需要加 ;</p></li></ul><p><strong>返回值：</strong></p><ul><li><p>查询成功：返回0，如果是查询，结果集放在mysql对象中</p></li><li><p>查询失败：返回非0值</p></li></ul><h3 id="_2-4、获取结果集" tabindex="-1"><a class="header-anchor" href="#_2-4、获取结果集"><span>2.4、获取结果集</span></a></h3><p><strong>函数：</strong> <code>MYSQL_RES *mysql_store_result(MYSQL *mysql);</code></p><p><strong>返回值：</strong></p><ul><li><p>将结果集从mysql对象这个参数中取出</p></li><li><p>MYSQL_RES 对应的一块内存，里边保存着这个查询之后得到的结果集</p></li><li><p>返回值是具有多个MYSQL_RES结果集合，如果出现错误，返回NULL</p></li></ul><h3 id="_2-5、结果集列数" tabindex="-1"><a class="header-anchor" href="#_2-5、结果集列数"><span>2.5、结果集列数</span></a></h3><p><strong>函数：</strong> <code>unsigned int mysql_num_fields(MYSQL_RES *result);</code></p><p><strong>作用：</strong> 获取结果集中的列数</p><p><strong>参数：</strong> 调用mysql_store_result()得到的返回值</p><p><strong>返回值：</strong> 结果集中的列数</p><h3 id="_2-6、从结果集中获取到表中的字段名" tabindex="-1"><a class="header-anchor" href="#_2-6、从结果集中获取到表中的字段名"><span>2.6、从结果集中获取到表中的字段名</span></a></h3><p><strong>函数：</strong> <code>MYSQL_FIELD *mysql_fetch_fields(MYSQL_RES *result);</code></p><p><strong>参数：</strong> 调用mysql_store_result()得到的返回值</p><p><strong>返回值：</strong> MYSQL_FIELD * 指向一个结构体</p><p><strong>作用：</strong> 通过这个函数得到结果集中所有列的名字</p><p><strong>MYSQL_FIELD结构体：</strong></p><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" data-title="cpp" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// mysql.h</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 结果集中的每一个列对应一个 MYSQL_FIELD</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">typedef</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> st_mysql_field</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  char</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">name;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">                 /* 列名-&gt; 字段的名字 */</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  char</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">org_name;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">             /* Original column name, if an alias */</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  char</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">table;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">                /* Table of column if column was a field */</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  char</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">org_table;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">            /* Org table name, if table was an alias */</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  char</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">db;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">                   /* Database for table */</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  char</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">catalog;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">              /* Catalog for table */</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  char</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">def;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">                  /* Default value (set by mysql_list_fields) */</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  unsigned</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> length;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">       /* Width of column (create length) */</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  unsigned</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> max_length;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">   /* Max width for selected set */</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  unsigned</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> name_length;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  unsigned</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> org_name_length;                                                                                        </span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  unsigned</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> table_length;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  unsigned</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> org_table_length;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  unsigned</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> db_length;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  unsigned</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> catalog_length;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  unsigned</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> def_length;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  unsigned</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> flags;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">         /* Div flags */</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  unsigned</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> decimals;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">      /* Number of decimals in field */</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  unsigned</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> charsetnr;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">     /* Character set */</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  enum</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> enum_field_types</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> /* Type of field. See mysql_com.h for types */</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  void</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">extension;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">} </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">MYSQL_FIELD</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-7、得到结果集中字段的长度" tabindex="-1"><a class="header-anchor" href="#_2-7、得到结果集中字段的长度"><span>2.7、得到结果集中字段的长度</span></a></h3><p><strong>函数：</strong> <code>unsigned long *mysql_fetch_lengths(MYSQL_RES *result);</code></p><p><strong>参数：</strong> result:通过查询得到的结果集</p><p><strong>返回值：</strong> 无符号长整数的数组表示各列的大小。如果出现错误返回NULL</p><h3 id="_2-8、遍历结果集" tabindex="-1"><a class="header-anchor" href="#_2-8、遍历结果集"><span>2.8、遍历结果集</span></a></h3><p><strong>函数：</strong> <code>MYSQL_ROW mysql_fetch_row(MYSQL_RES *result);</code></p><p><strong>参数：</strong> result是通过查询得到的结果集</p><p><strong>返回值：</strong></p><ul><li>成功：得到了当前记录中每个字段的值</li><li>失败：NULL，说明数据已经读完了</li></ul><p><strong>注意：</strong></p><ul><li>结果集 <code>typedef char** MYSQL_ROW;</code></li><li>遍历结果集的下一行</li><li>如果想遍历整个结果集，需要对该函数进行循环调用</li><li>返回值是二级指针，char** 指向一个的数据类型如下</li></ul><ol><li>指向一个指针数组，类型是数组，里边每个元素都是指针，char* 类型</li><li>char *[];数组中的字符串对应的一列数据</li><li>需要对MYSQL_ROW 遍历就可以得到每一列的值</li><li>如果要遍历整个结果集，需要循环调用这个函数</li></ol><p>2.9、资源回收</p><p>释放结果集</p><p><code>void mysql_free_result(MYSQL_RES *result);</code></p><p>关闭mysql实例</p><p><code>void mysql_close(MYSQL *mysql);</code></p>',53)],t={},h=(0,l(6262).A)(t,[["render",function(i,s){return(0,n.uX)(),(0,n.CE)("div",null,a)}]]),e=JSON.parse('{"path":"/language/cpp/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8E%A5%E5%8F%A3.html","title":"C/C++ 使用 MySQL API 操作 数据库","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-06-12T00:00:00.000Z","category":["C++"],"tag":["C++","数据库"],"sticky":true,"order":1,"author":"Ms.Huang"},"headers":[{"level":2,"title":"1、连接数据库操作的步骤实现","slug":"_1、连接数据库操作的步骤实现","link":"#_1、连接数据库操作的步骤实现","children":[]},{"level":2,"title":"2、API详解","slug":"_2、api详解","link":"#_2、api详解","children":[{"level":3,"title":"2.1、初始化连接","slug":"_2-1、初始化连接","link":"#_2-1、初始化连接","children":[]},{"level":3,"title":"2.2、连接mysql服务器","slug":"_2-2、连接mysql服务器","link":"#_2-2、连接mysql服务器","children":[]},{"level":3,"title":"2.3、执行sql语句","slug":"_2-3、执行sql语句","link":"#_2-3、执行sql语句","children":[]},{"level":3,"title":"2.4、获取结果集","slug":"_2-4、获取结果集","link":"#_2-4、获取结果集","children":[]},{"level":3,"title":"2.5、结果集列数","slug":"_2-5、结果集列数","link":"#_2-5、结果集列数","children":[]},{"level":3,"title":"2.6、从结果集中获取到表中的字段名","slug":"_2-6、从结果集中获取到表中的字段名","link":"#_2-6、从结果集中获取到表中的字段名","children":[]},{"level":3,"title":"2.7、得到结果集中字段的长度","slug":"_2-7、得到结果集中字段的长度","link":"#_2-7、得到结果集中字段的长度","children":[]},{"level":3,"title":"2.8、遍历结果集","slug":"_2-8、遍历结果集","link":"#_2-8、遍历结果集","children":[]}]}],"git":{"createdTime":1719490896000,"updatedTime":1722692967000,"contributors":[{"name":"haley","email":"huanghongweimax@163.com","commits":2}]},"readingTime":{"minutes":3.75,"words":1125},"filePathRelative":"language/cpp/数据库接口.md","localizedDate":"2024年6月12日","excerpt":"\\n<h2>1、连接数据库操作的步骤实现</h2>\\n<ol>\\n<li>\\n<p>初始化链接</p>\\n</li>\\n<li>\\n<p>连接mysql服务器，参数如下：</p>\\n</li>\\n</ol>\\n<ul>\\n<li>\\n<p>服务器的IP</p>\\n</li>\\n<li>\\n<p>端口</p>\\n</li>\\n<li>\\n<p>用户名</p>\\n</li>\\n<li>\\n<p>密码</p>\\n</li>\\n<li>\\n<p>数据库名</p>\\n</li>\\n</ul>\\n<ol start=\\"3\\">\\n<li>\\n<p>对数据进行增删查改</p>\\n</li>\\n<li>\\n<p>事务处理</p>\\n</li>\\n<li>\\n<p>数据库的读数据  操作-&gt;  查询 -&gt; 得到结果集</p>\\n</li>\\n<li>\\n<p>遍历结果集 -&gt; 获得自己需要的数据</p>\\n</li>\\n<li>\\n<p>释放资源</p>\\n</li>\\n</ol>"}')}}]);