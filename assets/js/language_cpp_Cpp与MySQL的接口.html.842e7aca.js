"use strict";(self.webpackChunkvuepress_theme_hope_template=self.webpackChunkvuepress_theme_hope_template||[]).push([[6704],{6262:(n,l)=>{l.A=(n,l)=>{const e=n.__vccOpts||n;for(const[n,s]of l)e[n]=s;return e}},2288:(n,l,e)=>{e.r(l),e.d(l,{comp:()=>a,data:()=>p});var s=e(641);const t=[(0,s.Fv)('<h1 id="c-c-使用-mysql-api-操作-数据库" tabindex="-1"><a class="header-anchor" href="#c-c-使用-mysql-api-操作-数据库"><span>C/C++ 使用 MySQL API 操作 数据库</span></a></h1><h2 id="_1、连接数据库操作的步骤实现" tabindex="-1"><a class="header-anchor" href="#_1、连接数据库操作的步骤实现"><span>1、连接数据库操作的步骤实现</span></a></h2><ol><li><p>初始化链接</p></li><li><p>连接mysql服务器，参数如下：</p></li></ol><ul><li><p>服务器的IP</p></li><li><p>端口</p></li><li><p>用户名</p></li><li><p>密码</p></li><li><p>数据库名</p></li></ul><ol start="3"><li><p>对数据进行增删查改</p></li><li><p>事务处理</p></li><li><p>数据库的读数据 操作-&gt; 查询 -&gt; 得到结果集</p></li><li><p>遍历结果集 -&gt; 获得自己需要的数据</p></li><li><p>释放资源</p></li></ol><h2 id="_2、api详解" tabindex="-1"><a class="header-anchor" href="#_2、api详解"><span>2、API详解</span></a></h2><h3 id="_2-1、初始化连接" tabindex="-1"><a class="header-anchor" href="#_2-1、初始化连接"><span>2.1、初始化连接</span></a></h3><p><strong>函数:</strong><code>MYSQL *mysql_init(MYSQL *mysql);</code></p><p><strong>返回值:</strong> 该函数将分配、初始化、并返回新对象通过返回的这个对象去连接MySQL的服务器</p><h3 id="_2-2、连接mysql服务器" tabindex="-1"><a class="header-anchor" href="#_2-2、连接mysql服务器"><span>2.2、连接mysql服务器</span></a></h3><p><strong>函数及参数：</strong></p><pre><code>MYSQL *mysql_real_connect(\n        MYSQL *mysql,               //mysql_init() 函数的返回地址\n        const char *host,           //主机地址\n        const char *user,           //mysql服务器的用户名\n        const char *passwd,         //连接mysql服务器的密码\n        const char *db,             //需要连接的数据库名字\n        unsigned int port,          //连接的端口，mysql服务器默认为3306\n        const char *unix_socket,    //本地套接字,如果没有指定就是NULL\n        unsigned long client_flag   //通常指定为0\n    )\n</code></pre><p><strong>返回值：</strong> 成功: 返回MYSQL*连接句柄（所谓的句柄就是一个连接的对象）, 对于成功的连接，返回值与第1个参数的值相同。返回值指向的 内存和第一个参数指针指向的内存一样 失败，返回NULL。</p><p><strong>句柄:</strong> 是windows中的一个概念, 句柄可以理解为一个实例(或者对象)</p><h3 id="_2-3、执行sql语句" tabindex="-1"><a class="header-anchor" href="#_2-3、执行sql语句"><span>2.3、执行sql语句</span></a></h3><p><strong>函数：</strong> <code>int mysql_query(MYSQL *mysql , const char *query);</code></p><p><strong>参数：</strong></p><ul><li><p>mysql ： mysql_real_connect()的返回值</p></li><li><p>query ：一个可以执行的sql语句，结尾的位置不需要加 ;</p></li></ul><p><strong>返回值：</strong></p><ul><li><p>查询成功：返回0，如果是查询，结果集放在mysql对象中</p></li><li><p>查询失败：返回非0值</p></li></ul><h3 id="_2-4、获取结果集" tabindex="-1"><a class="header-anchor" href="#_2-4、获取结果集"><span>2.4、获取结果集</span></a></h3><p><strong>函数：</strong> <code>MYSQL_RES *mysql_store_result(MYSQL *mysql);</code></p><p><strong>返回值：</strong></p><ul><li><p>将结果集从mysql对象这个参数中取出</p></li><li><p>MYSQL_RES 对应的一块内存，里边保存着这个查询之后得到的结果集</p></li><li><p>返回值是具有多个MYSQL_RES结果集合，如果出现错误，返回NULL</p></li></ul><h3 id="_2-5、结果集列数" tabindex="-1"><a class="header-anchor" href="#_2-5、结果集列数"><span>2.5、结果集列数</span></a></h3><p><strong>函数：</strong> <code>unsigned int mysql_num_fields(MYSQL_RES *result);</code></p><p><strong>作用：</strong> 获取结果集中的列数</p><p><strong>参数：</strong> 调用mysql_store_result()得到的返回值</p><p><strong>返回值：</strong> 结果集中的列数</p><h3 id="_2-6、从结果集中获取到表中的字段名" tabindex="-1"><a class="header-anchor" href="#_2-6、从结果集中获取到表中的字段名"><span>2.6、从结果集中获取到表中的字段名</span></a></h3><p><strong>函数：</strong> <code>MYSQL_FIELD *mysql_fetch_fields(MYSQL_RES *result);</code></p><p><strong>参数：</strong> 调用mysql_store_result()得到的返回值</p><p><strong>返回值：</strong> MYSQL_FIELD * 指向一个结构体</p><p><strong>作用：</strong> 通过这个函数得到结果集中所有列的名字</p><p><strong>MYSQL_FIELD结构体：</strong></p><pre><code>// mysql.h\n// 结果集中的每一个列对应一个 MYSQL_FIELD\ntypedef struct st_mysql_field {\n  char *name;                 /* 列名-&gt; 字段的名字 */\n  char *org_name;             /* Original column name, if an alias */\n  char *table;                /* Table of column if column was a field */\n  char *org_table;            /* Org table name, if table was an alias */\n  char *db;                   /* Database for table */\n  char *catalog;              /* Catalog for table */\n  char *def;                  /* Default value (set by mysql_list_fields) */\n  unsigned long length;       /* Width of column (create length) */\n  unsigned long max_length;   /* Max width for selected set */\n  unsigned int name_length;\n  unsigned int org_name_length;                                                                                        \n  unsigned int table_length;\n  unsigned int org_table_length;\n  unsigned int db_length;\n  unsigned int catalog_length;\n  unsigned int def_length;\n  unsigned int flags;         /* Div flags */\n  unsigned int decimals;      /* Number of decimals in field */\n  unsigned int charsetnr;     /* Character set */\n  enum enum_field_types type; /* Type of field. See mysql_com.h for types */\n  void *extension;\n} MYSQL_FIELD;\n</code></pre><h3 id="_2-7、得到结果集中字段的长度" tabindex="-1"><a class="header-anchor" href="#_2-7、得到结果集中字段的长度"><span>2.7、得到结果集中字段的长度</span></a></h3><p><strong>函数：</strong> result 通过查询得到的结果集</p><p><strong>返回值：</strong> 无符号长整数的数组表示各列的大小。如果</p>',39)],i={},a=(0,e(6262).A)(i,[["render",function(n,l){return(0,s.uX)(),(0,s.CE)("div",null,t)}]]),p=JSON.parse('{"path":"/language/cpp/Cpp%E4%B8%8EMySQL%E7%9A%84%E6%8E%A5%E5%8F%A3.html","title":"C/C++ 使用 MySQL API 操作 数据库","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-07-26T00:00:00.000Z","category":["C++"],"tag":["C++","MySql"],"sticky":true,"order":1,"author":"Ms.Huang"},"headers":[{"level":2,"title":"1、连接数据库操作的步骤实现","slug":"_1、连接数据库操作的步骤实现","link":"#_1、连接数据库操作的步骤实现","children":[]},{"level":2,"title":"2、API详解","slug":"_2、api详解","link":"#_2、api详解","children":[{"level":3,"title":"2.1、初始化连接","slug":"_2-1、初始化连接","link":"#_2-1、初始化连接","children":[]},{"level":3,"title":"2.2、连接mysql服务器","slug":"_2-2、连接mysql服务器","link":"#_2-2、连接mysql服务器","children":[]},{"level":3,"title":"2.3、执行sql语句","slug":"_2-3、执行sql语句","link":"#_2-3、执行sql语句","children":[]},{"level":3,"title":"2.4、获取结果集","slug":"_2-4、获取结果集","link":"#_2-4、获取结果集","children":[]},{"level":3,"title":"2.5、结果集列数","slug":"_2-5、结果集列数","link":"#_2-5、结果集列数","children":[]},{"level":3,"title":"2.6、从结果集中获取到表中的字段名","slug":"_2-6、从结果集中获取到表中的字段名","link":"#_2-6、从结果集中获取到表中的字段名","children":[]},{"level":3,"title":"2.7、得到结果集中字段的长度","slug":"_2-7、得到结果集中字段的长度","link":"#_2-7、得到结果集中字段的长度","children":[]}]}],"git":{"createdTime":1721956255000,"updatedTime":1722692967000,"contributors":[{"name":"haley","email":"huanghongweimax@163.com","commits":2}]},"readingTime":{"minutes":2.96,"words":887},"filePathRelative":"language/cpp/Cpp与MySQL的接口.md","localizedDate":"2024年7月26日","excerpt":"\\n<h2>1、连接数据库操作的步骤实现</h2>\\n<ol>\\n<li>\\n<p>初始化链接</p>\\n</li>\\n<li>\\n<p>连接mysql服务器，参数如下：</p>\\n</li>\\n</ol>\\n<ul>\\n<li>\\n<p>服务器的IP</p>\\n</li>\\n<li>\\n<p>端口</p>\\n</li>\\n<li>\\n<p>用户名</p>\\n</li>\\n<li>\\n<p>密码</p>\\n</li>\\n<li>\\n<p>数据库名</p>\\n</li>\\n</ul>\\n<ol start=\\"3\\">\\n<li>\\n<p>对数据进行增删查改</p>\\n</li>\\n<li>\\n<p>事务处理</p>\\n</li>\\n<li>\\n<p>数据库的读数据 操作-&gt; 查询 -&gt; 得到结果集</p>\\n</li>\\n<li>\\n<p>遍历结果集 -&gt; 获得自己需要的数据</p>\\n</li>\\n<li>\\n<p>释放资源</p>\\n</li>\\n</ol>"}')}}]);